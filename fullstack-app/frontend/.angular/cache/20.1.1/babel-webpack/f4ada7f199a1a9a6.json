{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CaseService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/cases';\n  }\n  // Case CRUD operations\n  getAllCases() {\n    return this.http.get(this.apiUrl);\n  }\n  getCaseById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createCase(caseData) {\n    return this.http.post(this.apiUrl, caseData);\n  }\n  updateCase(id, caseData) {\n    return this.http.put(`${this.apiUrl}/${id}`, caseData);\n  }\n  deleteCase(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  // Dropdown data services\n  getCourtLocations() {\n    // Mock data - replace with actual API call\n    return of([{\n      value: 'STL_CITY',\n      label: 'St. Louis City Circuit Court'\n    }, {\n      value: 'STL_COUNTY',\n      label: 'St. Louis County Circuit Court'\n    }, {\n      value: 'JACKSON',\n      label: 'Jackson County Circuit Court'\n    }, {\n      value: 'GREENE',\n      label: 'Greene County Circuit Court'\n    }, {\n      value: 'CLAY',\n      label: 'Clay County Circuit Court'\n    }, {\n      value: 'JEFFERSON',\n      label: 'Jefferson County Circuit Court'\n    }]);\n  }\n  getCaseCategories() {\n    // Mock data - replace with actual API call\n    return of([{\n      value: 'CIVIL',\n      label: 'Civil'\n    }, {\n      value: 'CRIMINAL',\n      label: 'Criminal'\n    }, {\n      value: 'FAMILY',\n      label: 'Family'\n    }, {\n      value: 'PROBATE',\n      label: 'Probate'\n    }, {\n      value: 'JUVENILE',\n      label: 'Juvenile'\n    }, {\n      value: 'MUNICIPAL',\n      label: 'Municipal'\n    }]);\n  }\n  getCaseTypesByCategory(categoryId) {\n    // Mock data - replace with actual API call\n    const caseTypes = {\n      'CIVIL': [{\n        value: 'CIVIL_GENERAL',\n        label: 'General Civil',\n        categoryId: 'CIVIL',\n        requiresFee: true,\n        defaultFee: 165.00\n      }, {\n        value: 'CIVIL_CONTRACT',\n        label: 'Contract Dispute',\n        categoryId: 'CIVIL',\n        requiresFee: true,\n        defaultFee: 165.00\n      }, {\n        value: 'CIVIL_TORT',\n        label: 'Tort',\n        categoryId: 'CIVIL',\n        requiresFee: true,\n        defaultFee: 165.00\n      }, {\n        value: 'CIVIL_SMALL_CLAIMS',\n        label: 'Small Claims',\n        categoryId: 'CIVIL',\n        requiresFee: true,\n        defaultFee: 35.00\n      }],\n      'CRIMINAL': [{\n        value: 'CRIM_FELONY',\n        label: 'Felony',\n        categoryId: 'CRIMINAL',\n        requiresFee: false\n      }, {\n        value: 'CRIM_MISDEMEANOR',\n        label: 'Misdemeanor',\n        categoryId: 'CRIMINAL',\n        requiresFee: false\n      }, {\n        value: 'CRIM_TRAFFIC',\n        label: 'Traffic',\n        categoryId: 'CRIMINAL',\n        requiresFee: false\n      }],\n      'FAMILY': [{\n        value: 'FAM_DIVORCE',\n        label: 'Divorce',\n        categoryId: 'FAMILY',\n        requiresFee: true,\n        defaultFee: 163.00\n      }, {\n        value: 'FAM_CUSTODY',\n        label: 'Child Custody',\n        categoryId: 'FAMILY',\n        requiresFee: true,\n        defaultFee: 163.00\n      }, {\n        value: 'FAM_SUPPORT',\n        label: 'Child Support',\n        categoryId: 'FAMILY',\n        requiresFee: true,\n        defaultFee: 163.00\n      }, {\n        value: 'FAM_ADOPTION',\n        label: 'Adoption',\n        categoryId: 'FAMILY',\n        requiresFee: true,\n        defaultFee: 163.00\n      }],\n      'PROBATE': [{\n        value: 'PROB_ESTATE',\n        label: 'Estate Administration',\n        categoryId: 'PROBATE',\n        requiresFee: true,\n        defaultFee: 163.00\n      }, {\n        value: 'PROB_GUARDIANSHIP',\n        label: 'Guardianship',\n        categoryId: 'PROBATE',\n        requiresFee: true,\n        defaultFee: 163.00\n      }, {\n        value: 'PROB_CONSERVATORSHIP',\n        label: 'Conservatorship',\n        categoryId: 'PROBATE',\n        requiresFee: true,\n        defaultFee: 163.00\n      }],\n      'JUVENILE': [{\n        value: 'JUV_DELINQUENCY',\n        label: 'Juvenile Delinquency',\n        categoryId: 'JUVENILE',\n        requiresFee: false\n      }, {\n        value: 'JUV_ABUSE_NEGLECT',\n        label: 'Abuse and Neglect',\n        categoryId: 'JUVENILE',\n        requiresFee: false\n      }],\n      'MUNICIPAL': [{\n        value: 'MUN_ORDINANCE',\n        label: 'Ordinance Violation',\n        categoryId: 'MUNICIPAL',\n        requiresFee: true,\n        defaultFee: 50.00\n      }, {\n        value: 'MUN_CODE',\n        label: 'Code Enforcement',\n        categoryId: 'MUNICIPAL',\n        requiresFee: true,\n        defaultFee: 50.00\n      }]\n    };\n    return of(caseTypes[categoryId] || []);\n  }\n  calculateFilingFee(caseType) {\n    // Mock fee calculation - replace with actual API call\n    const mockFee = 165.00; // Default fee\n    return of(mockFee);\n  }\n  validateFilerReferenceNumber(referenceNumber) {\n    // Mock validation - replace with actual API call\n    return of(referenceNumber.length <= 30);\n  }\n  static #_ = this.ɵfac = function CaseService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CaseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CaseService,\n    factory: CaseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","CaseService","constructor","http","apiUrl","getAllCases","get","getCaseById","id","createCase","caseData","post","updateCase","put","deleteCase","delete","getCourtLocations","value","label","getCaseCategories","getCaseTypesByCategory","categoryId","caseTypes","requiresFee","defaultFee","calculateFilingFee","caseType","mockFee","validateFilerReferenceNumber","referenceNumber","length","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\ada\\workspaces\\angular-efile\\fullstack-app\\frontend\\src\\app\\services\\case.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Case, CaseFormModel, CourtLocation, CaseCategory, CaseType } from '../models/case.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaseService {\n  private apiUrl = 'http://localhost:8080/api/cases';\n\n  constructor(private http: HttpClient) { }\n\n  // Case CRUD operations\n  getAllCases(): Observable<Case[]> {\n    return this.http.get<Case[]>(this.apiUrl);\n  }\n\n  getCaseById(id: number): Observable<Case> {\n    return this.http.get<Case>(`${this.apiUrl}/${id}`);\n  }\n\n  createCase(caseData: CaseFormModel): Observable<Case> {\n    return this.http.post<Case>(this.apiUrl, caseData);\n  }\n\n  updateCase(id: number, caseData: CaseFormModel): Observable<Case> {\n    return this.http.put<Case>(`${this.apiUrl}/${id}`, caseData);\n  }\n\n  deleteCase(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  // Dropdown data services\n  getCourtLocations(): Observable<CourtLocation[]> {\n    // Mock data - replace with actual API call\n    return of([\n      { value: 'STL_CITY', label: 'St. Louis City Circuit Court' },\n      { value: 'STL_COUNTY', label: 'St. Louis County Circuit Court' },\n      { value: 'JACKSON', label: 'Jackson County Circuit Court' },\n      { value: 'GREENE', label: 'Greene County Circuit Court' },\n      { value: 'CLAY', label: 'Clay County Circuit Court' },\n      { value: 'JEFFERSON', label: 'Jefferson County Circuit Court' }\n    ]);\n  }\n\n  getCaseCategories(): Observable<CaseCategory[]> {\n    // Mock data - replace with actual API call\n    return of([\n      { value: 'CIVIL', label: 'Civil' },\n      { value: 'CRIMINAL', label: 'Criminal' },\n      { value: 'FAMILY', label: 'Family' },\n      { value: 'PROBATE', label: 'Probate' },\n      { value: 'JUVENILE', label: 'Juvenile' },\n      { value: 'MUNICIPAL', label: 'Municipal' }\n    ]);\n  }\n\n  getCaseTypesByCategory(categoryId: string): Observable<CaseType[]> {\n    // Mock data - replace with actual API call\n    const caseTypes: { [key: string]: CaseType[] } = {\n      'CIVIL': [\n        { value: 'CIVIL_GENERAL', label: 'General Civil', categoryId: 'CIVIL', requiresFee: true, defaultFee: 165.00 },\n        { value: 'CIVIL_CONTRACT', label: 'Contract Dispute', categoryId: 'CIVIL', requiresFee: true, defaultFee: 165.00 },\n        { value: 'CIVIL_TORT', label: 'Tort', categoryId: 'CIVIL', requiresFee: true, defaultFee: 165.00 },\n        { value: 'CIVIL_SMALL_CLAIMS', label: 'Small Claims', categoryId: 'CIVIL', requiresFee: true, defaultFee: 35.00 }\n      ],\n      'CRIMINAL': [\n        { value: 'CRIM_FELONY', label: 'Felony', categoryId: 'CRIMINAL', requiresFee: false },\n        { value: 'CRIM_MISDEMEANOR', label: 'Misdemeanor', categoryId: 'CRIMINAL', requiresFee: false },\n        { value: 'CRIM_TRAFFIC', label: 'Traffic', categoryId: 'CRIMINAL', requiresFee: false }\n      ],\n      'FAMILY': [\n        { value: 'FAM_DIVORCE', label: 'Divorce', categoryId: 'FAMILY', requiresFee: true, defaultFee: 163.00 },\n        { value: 'FAM_CUSTODY', label: 'Child Custody', categoryId: 'FAMILY', requiresFee: true, defaultFee: 163.00 },\n        { value: 'FAM_SUPPORT', label: 'Child Support', categoryId: 'FAMILY', requiresFee: true, defaultFee: 163.00 },\n        { value: 'FAM_ADOPTION', label: 'Adoption', categoryId: 'FAMILY', requiresFee: true, defaultFee: 163.00 }\n      ],\n      'PROBATE': [\n        { value: 'PROB_ESTATE', label: 'Estate Administration', categoryId: 'PROBATE', requiresFee: true, defaultFee: 163.00 },\n        { value: 'PROB_GUARDIANSHIP', label: 'Guardianship', categoryId: 'PROBATE', requiresFee: true, defaultFee: 163.00 },\n        { value: 'PROB_CONSERVATORSHIP', label: 'Conservatorship', categoryId: 'PROBATE', requiresFee: true, defaultFee: 163.00 }\n      ],\n      'JUVENILE': [\n        { value: 'JUV_DELINQUENCY', label: 'Juvenile Delinquency', categoryId: 'JUVENILE', requiresFee: false },\n        { value: 'JUV_ABUSE_NEGLECT', label: 'Abuse and Neglect', categoryId: 'JUVENILE', requiresFee: false }\n      ],\n      'MUNICIPAL': [\n        { value: 'MUN_ORDINANCE', label: 'Ordinance Violation', categoryId: 'MUNICIPAL', requiresFee: true, defaultFee: 50.00 },\n        { value: 'MUN_CODE', label: 'Code Enforcement', categoryId: 'MUNICIPAL', requiresFee: true, defaultFee: 50.00 }\n      ]\n    };\n\n    return of(caseTypes[categoryId] || []);\n  }\n\n  calculateFilingFee(caseType: string): Observable<number> {\n    // Mock fee calculation - replace with actual API call\n    const mockFee = 165.00; // Default fee\n    return of(mockFee);\n  }\n\n  validateFilerReferenceNumber(referenceNumber: string): Observable<boolean> {\n    // Mock validation - replace with actual API call\n    return of(referenceNumber.length <= 30);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}